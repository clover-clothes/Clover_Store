@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<link rel="stylesheet" href="~/css/mainStyle.css" />
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="header__login-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
        <li class="nav-item" >
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button style="display: flex;
    justify-content: end;
    color: var(--color-primary-dark-1);
    font-weight: 500;
    font-size: 1.6rem;
border-radius:25px;
    padding: 0.5rem 1rem;" id="logout" type="submit" class="header__login-link">
                    Logout
                </button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="header__login-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
            <a class="header__login-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
